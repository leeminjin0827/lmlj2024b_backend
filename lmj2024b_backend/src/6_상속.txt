[ 상속 ]
	1. 부모로부터 자식이나 손자까지 물려주는 행위
	2. 부모클래스/상위클래스 , 자식클래스/하위클래스
	3. extends 키워드 , '연장,확장 하다'
		class 하위클래스 extends 상위클래스 { }
	4. 상위클래스가 하위클래스의 개념을 확장,세분화 하는 의미
		예]
			포유류( 고래 , 원숭이 등등 ) <-- 일반적인 개념
			  |
		  	  V
		     사람						<-- 구체적인 개념
	5. 목적 : 특정 클래스의 멤버변수 나 메소드를 물려받아 또 다른 클래스를 빠른 설계
	6. 장점 : 1. 유지보수 | 2. 계층구조파악 | 3. 재 사용성 | 4. *다형성* 
	7. 하위클래스가 상위클래스의 멤버변수,메소드를 사용할수 있다.
		---> 단] 현실세계와 다르게 하위클래스가 상위클래스를 선택한다. ( 자식이 부모를 선택한다. )
	8. 타입변환 ? 분류를 변환하는 행위
		- 타입이란 ? 자료 속성의 분류 , 클래스
		- 자동(묵시적)타입변환 :
			[ 기본타입 ]
			- 작은타입에서 큰타입으로 기본타입이 변환 , 큰타입이 메모리적으로 더 크니까 , 데이터 표현 범위가 더 크다 
			- byte -> short - > int -> long -> float -> double
			[ 참조타입 ]
			- 하위클래스(타입) 에서 상위클래스(타입) 으로 변환
			- * 자바의 모든 클래스는 Object 클래스로 타입변환이 가능하다. ( 상-하 관계에서 가능하다 )
			
		- 강제(명시적)타입변환 , 캐스팅 : ()
			[ 기본타입 ] 
			- 큰타입에서 작은타입으로 기본타입이 변환 , 작은타입이 메모리적으로 더 작으니까 손실 , 데이터 표현 범위가 더 작다 
			- double -> float -> long -> int -> short -> byte
			[ 참조타입 ]
			- 상위클래스(타입) 에서 하위클래스(타입) 으로 변환이 불가능하다. 가능한 전제조건이 있다.
			- 가능한 전제조건 : 인스턴스(객체)가 본래 변환할 타입으로 생성된 경우에는 가능하다. ( 상-하 관계에서 가능하다 )
			 


	[ 물리적인 설계 ]			
	9. *********** 하위클래스가 객체(인스턴스) 생성하면 상위클래스의 객체(인스턴스)도 같이 메모리 할당 ***********
		즉] 하위클래스는 부모클래스 없이 인스턴르르 생성할수 없다.
	[ 논리적인 설계 ]
	10. Object 클래스 이란? 자바의 모든 클래스 중에 가장 최상위 (슈퍼)클래스
	자바회사에서 내부적으로 모든 클래스는 Object 클래스로 부터 상속 받도록 설계
		즉] 내가 만든 클래스와 자바의 모든 클래스는 Object 클래스로부터 상속받는다. 자바는 100% 상속
		
			Object 클래스
			  |
			  V
			포유류 클래스( 고래 , 원숭이 등등 ) <-- 일반적인 개념
			  |
		  	  V
		    사람클래스						 <-- 구체적인 개념
	